<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://10.20.91.130/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.online.college.core.course.dao.CourseSectionDao">

	<resultMap id="BeanResultMap" type="com.online.college.core.course.domain.CourseSection" >
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="course_id" property="courseId"  jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId"  jdbcType="VARCHAR" />
		<result column="name" property="name"  jdbcType="VARCHAR" />
		<result column="sort" property="sort"  jdbcType="INTEGER" />
		<result column="time" property="time"  jdbcType="VARCHAR" />
		<result column="onsale" property="onsale"  jdbcType="INTEGER" />
		<result column="video_url" property="videoUrl"  jdbcType="VARCHAR" />
		<result column="create_time" property="createTime"  jdbcType="DATE" />
		<result column="create_user" property="createUser"  jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime"  jdbcType="TIMESTAMP" />
		<result column="update_user" property="updateUser"  jdbcType="VARCHAR" />
		<result column="del" property="del"  jdbcType="TINYINT" />
	</resultMap> 


	<sql id="All_Columns">
		course_id, parent_id, name, sort, time, onsale, video_url,
		create_time, create_user, update_time, update_user, del, id 
	</sql>

	<select id="queryAll" parameterType="com.online.college.core.course.domain.CourseSection" resultMap="BeanResultMap">
		SELECT 
		<include refid="All_Columns" />
		FROM t_course_section 
		<trim prefix="WHERE " prefixOverrides="AND |OR "> 
			del = 0
			<if test="courseId != null">
				AND course_id = #{courseId, jdbcType=INTEGER}
			</if>
			<if test="onsale != null">
				AND onsale = #{onsale, jdbcType=INTEGER}
			</if>
		</trim>
		ORDER BY parent_id , sort
	</select>

	<select id="getTotalItemsCount" parameterType="com.online.college.core.course.domain.CourseSection" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM t_course_section
		WHERE del = 0 
	</select>

	<select id="queryPage" resultType="com.online.college.core.course.domain.CourseSection">
		SELECT 
		<include refid="All_Columns" />
		FROM t_course_section
		WHERE del = 0 
		ORDER BY id
		LIMIT #{param2.startIndex, jdbcType=INTEGER} , #{param2.pageSize, jdbcType=INTEGER} 
	</select>

	<select id="getById" parameterType="java.lang.Long" resultType="com.online.college.core.course.domain.CourseSection">
		SELECT 
		<include refid="All_Columns"  />
		FROM t_course_section
		WHERE id = #{id, jdbcType=INTEGER}
	</select>
	
	<select id="getMaxSort" parameterType="java.lang.Long" resultType="java.lang.Integer">
		SELECT MAX(sort) 
		FROM t_course_section 
		WHERE course_id = #{courseId, jdbcType=INTEGER}
		AND parent_id = 0
		ORDER BY sort DESC
	</select>

	<insert id="create" parameterType="com.online.college.core.course.domain.CourseSection" flushCache="true"  useGeneratedKeys="true" keyProperty="id"  >
		INSERT INTO t_course_section
		( course_id, parent_id, name, sort, time, onsale, video_url, 
		CREATE_TIME, CREATE_USER, update_time, update_user, del, id ) 
		VALUES 
		( #{courseId, jdbcType=VARCHAR}, #{parentId, jdbcType=VARCHAR}, #{name, jdbcType=VARCHAR}, #{sort, jdbcType=INTEGER}, #{time, jdbcType=VARCHAR}, #{onsale, jdbcType=INTEGER}, #{videoUrl, jdbcType=VARCHAR}, 
		#{createTime, jdbcType=DATE}, #{createUser, jdbcType=VARCHAR}, #{updateTime, jdbcType=TIMESTAMP}, #{updateUser, jdbcType=VARCHAR}, #{del, jdbcType=TINYINT}, #{id, jdbcType=VARCHAR} ) 
	</insert>
	
	<insert id="createSelectivity" parameterType="com.online.college.core.course.domain.CourseSection" flushCache="true"  useGeneratedKeys="true" keyProperty="id"  >
		INSERT INTO t_course_section
		<trim prefix="(" suffix=")"  suffixOverrides="," >
			<if test="courseId != null ">
			course_id,
			</if>
			<if test="parentId != null ">
			parent_id,
			</if>
			<if test="name != null ">
			name,
			</if>
			<if test="sort != null ">
			sort,
			</if>
			<if test="time != null ">
			time,
			</if>
			<if test="onsale != null ">
			onsale,
			</if>
			<if test="videoUrl != null ">
			video_url,
			</if>
			<if test="createTime != null ">
			CREATE_TIME,
			</if>
			<if test="createUser != null ">
			CREATE_USER,
			</if>
			<if test="updateTime != null ">
			update_time,
			</if>
			<if test="updateUser != null ">
			update_user,
			</if>
			<if test="del != null ">
			del,
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")"  suffixOverrides="," >
			<if test="courseId != null ">
			#{courseId, jdbcType=INTEGER},
			</if>
			<if test="parentId != null ">
			#{parentId, jdbcType=INTEGER},
			</if>
			<if test="name != null ">
			#{name, jdbcType=VARCHAR},
			</if>
			<if test="sort != null ">
			#{sort, jdbcType=INTEGER},
			</if>
			<if test="time != null ">
			#{time, jdbcType=VARCHAR},
			</if>
			<if test="onsale != null ">
			#{onsale, jdbcType=INTEGER},
			</if>
			<if test="videoUrl != null ">
			#{videoUrl, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null ">
			#{createTime, jdbcType=DATE},
			</if>
			<if test="createUser != null ">
			#{createUser, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null ">
			#{updateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null ">
			#{updateUser, jdbcType=VARCHAR},
			</if>
			<if test="del != null ">
			#{del, jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	
	<insert id="createList" parameterType="list">  
		INSERT INTO t_course_section
		( course_id, parent_id, name, sort, time, onsale, video_url, 
		CREATE_TIME, CREATE_USER, update_time, update_user, del ) 
		VALUES 
		<foreach  collection="list" item="item" index="index" separator="," >  
		( #{item.courseId, jdbcType=VARCHAR}, #{item.parentId, jdbcType=VARCHAR}, #{item.name, jdbcType=VARCHAR}, #{item.sort, jdbcType=INTEGER}, #{item.time, jdbcType=VARCHAR}, #{item.onsale, jdbcType=INTEGER}, #{item.videoUrl, jdbcType=VARCHAR}, 
		#{item.createTime, jdbcType=DATE}, #{item.createUser, jdbcType=VARCHAR}, #{item.updateTime, jdbcType=TIMESTAMP}, #{item.updateUser, jdbcType=VARCHAR}, #{item.del, jdbcType=TINYINT}) 
		 </foreach> 
	</insert>

	<update id="update" parameterType="com.online.college.core.course.domain.CourseSection" flushCache="true">
		UPDATE t_course_section SET 
		course_id = #{courseId, jdbcType=VARCHAR},
		parent_id = #{parentId, jdbcType=VARCHAR},
		name = #{name, jdbcType=VARCHAR},
		sort = #{sort, jdbcType=INTEGER},
		time = #{time, jdbcType=VARCHAR},
		onsale = #{onsale, jdbcType=INTEGER},
		video_url = #{videoUrl, jdbcType=VARCHAR},
		update_time = #{updateTime, jdbcType=TIMESTAMP},
		update_user = #{updateUser, jdbcType=VARCHAR}
		WHERE id = #{id, jdbcType=INTEGER} 
	</update>

	<update id="updateSelectivity" parameterType="com.online.college.core.course.domain.CourseSection" flushCache="true">
		UPDATE t_course_section
		<trim prefix="SET" suffixOverrides="," >
			<if test="courseId != null ">
			course_id = #{courseId, jdbcType=VARCHAR},
			</if>
			<if test="parentId != null ">
			parent_id = #{parentId, jdbcType=VARCHAR},
			</if>
			<if test="name != null ">
			name = #{name, jdbcType=VARCHAR},
			</if>
			<if test="sort != null ">
			sort = #{sort, jdbcType=INTEGER},
			</if>
			<if test="time != null ">
			time = #{time, jdbcType=VARCHAR},
			</if>
			<if test="onsale != null ">
			onsale = #{onsale, jdbcType=INTEGER},
			</if>
			<if test="videoUrl != null ">
			video_url = #{videoUrl, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null ">
			update_time = #{updateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null ">
			update_user = #{updateUser, jdbcType=VARCHAR},
			</if>
			<if test="del != null ">
			del = #{del, jdbcType=TINYINT},
			</if>
		</trim>
		WHERE id = #{id, jdbcType = INTEGER}

	</update>

	<delete id="delete" parameterType="com.online.college.core.course.domain.CourseSection" >
		DELETE FROM t_course_section
		WHERE id = #{id, jdbcType=INTEGER} 
		OR parent_id = #{id, jdbcType=INTEGER}
	</delete>

	<update id="deleteLogic" parameterType="com.online.college.core.course.domain.CourseSection" flushCache="true">
		UPDATE t_course_section
		SET del = 1
		WHERE id = #{id, jdbcType=INTEGER}
		OR parent_id = #{id, jdbcType=INTEGER}
	</update>
	
	<delete id="deleteByCourseId" parameterType="com.online.college.core.course.domain.CourseSection" >
		DELETE FROM t_course_section
		WHERE course_id = #{courseId, jdbcType=INTEGER}
	</delete>

	<update id="deleteLogicByCourseId" parameterType="com.online.college.core.course.domain.CourseSection" flushCache="true">
		UPDATE t_course_section
		SET del = 1
		WHERE course_id = #{courseId, jdbcType=INTEGER}
	</update>
	
	<select id="getSortSectionMax" parameterType="com.online.college.core.course.domain.CourseSection" resultType="com.online.college.core.course.domain.CourseSection">
		SELECT 
		<include refid="All_Columns"  />
		FROM t_course_section  
		WHERE course_id = #{courseId}
		AND parent_id = #{parentId}
		<![CDATA[ AND sort > #{sort} ]]>
		ORDER BY sort ASC 
		LIMIT 0,1;
	</select>
	
	<select id="getSortSectionMin" parameterType="com.online.college.core.course.domain.CourseSection" resultType="com.online.college.core.course.domain.CourseSection">
		SELECT 
		<include refid="All_Columns"  />
		FROM t_course_section  
		WHERE course_id = #{courseId}
		AND parent_id = #{parentId}
		<![CDATA[ AND sort < #{sort} ]]>
		ORDER BY sort DESC 
		LIMIT 0,1;
	</select>
	

</mapper>
