<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"   
		xmlns:util="http://www.springframework.org/schema/util" 
		xmlns:aop="http://www.springframework.org/schema/aop"  
		xmlns:mvc="http://www.springframework.org/schema/mvc"        
    	xsi:schemaLocation="http://www.springframework.org/schema/beans        
    						http://www.springframework.org/schema/beans/spring-beans-2.5.xsd        
    						http://www.springframework.org/schema/context        
   							http://www.springframework.org/schema/context/spring-context-2.5.xsd
   							http://www.springframework.org/schema/tx    
          					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
     						http://www.springframework.org/schema/aop 
     						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
   							http://www.springframework.org/schema/mvc  
						    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"> 
		
		
		<!-- 默认的注解映射的支持 -->  
		<context:annotation-config />
		<context:component-scan base-package="com.online.college"/>  
    	
    	<!-- 针对 Responsebody 转码 -->
    	<mvc:annotation-driven>
			<mvc:message-converters register-defaults="true">
				<bean class="com.online.college.common.web.UTF8HttpMessageConverter" />
			</mvc:message-converters>
		</mvc:annotation-driven>
		
		<!-- 加载jdbc 和 app配置文件 -->
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="true">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<value>classpath:/jdbc.properties</value>
					<value>classpath:/application.properties</value> 
				</list>
			</property>
		</bean>
		
	    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		    <property name="driverClass" value="${datasource.driverClassName}" />
		    <property name="jdbcUrl" value="${datasource.url}" />
		    <property name="user" value="${datasource.username}" />
		    <property name="password" value="${datasource.password}" />
		    <property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		    <property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		    <property name="minPoolSize" value="${c3p0.minPoolSize}" />
		    <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		    <property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		    <property name="maxStatements" value="${c3p0.maxStatements}" />
		    <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />
	    </bean>
	    
	    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		    <property name="configLocation" value="classpath:mybatis-config.xml" />  
		    <property name="dataSource" ref="dataSource" />
		    <property name="mapperLocations" value="classpath*:com/**/dao/*Mapper.xml"/>
		</bean>
		
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
		  <constructor-arg index="0" ref="sqlSessionFactory" />  
		</bean>
		
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.**.dao" />
		</bean>
		
				
		<!-- 配置事务管理器 -->
		<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>
		
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="do*" propagation="REQUIRED" />
				<tx:method name="delete*" propagation="REQUIRED" />
				<tx:method name="merge*" propagation="REQUIRED" />
				<tx:method name="add*" propagation="REQUIRED" />
				<tx:method name="save*" propagation="REQUIRED" />
				<tx:method name="create*" propagation="REQUIRED" />
				<tx:method name="insert*" propagation="REQUIRED" />
				<tx:method name="update*" propagation="REQUIRED" />
				<tx:method name="enable*" propagation="REQUIRED" />
				<tx:method name="disable*" propagation="REQUIRED" />
				<tx:method name="generate*" propagation="REQUIRED" />
				<tx:method name="*" read-only="true"/> 
			</tx:attributes>
		</tx:advice>
		
		<aop:config >
			<aop:pointcut expression="execution (* com.online.college.*.service.*.*(..))"  id="services" />
			<aop:advisor advice-ref="txAdvice" pointcut-ref="services" />
		</aop:config>
	    
	    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
		 
		<!-- 微信OAuth2的拦截器,开发者可以自行配置参数-->
        <mvc:interceptors>
			<mvc:interceptor>
	        	<mvc:mapping path="/**/*.html"/>
	        	<bean class="com.online.college.wechat.wxapi.interceptor.WxOAuth2Interceptor">
	        		<property name="includes">
	        			<list> 
							<value>/wxapi/oauthTest.html</value>
						</list>
	        		</property>
	        	</bean>
	        </mvc:interceptor>
		</mvc:interceptors>
		 
		 <!-- 引入memcache -->
		<!-- <import resource="memcache.xml" /> -->
		
</beans>


